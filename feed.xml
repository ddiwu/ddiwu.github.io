<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://ddiwu.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://ddiwu.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-03-06T03:59:36+00:00</updated><id>https://ddiwu.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">a post with automatic report ip</title><link href="https://ddiwu.github.io/blog/2024/code-rsppi/" rel="alternate" type="text/html" title="a post with automatic report ip"/><published>2024-03-05T15:09:00+00:00</published><updated>2024-03-05T15:09:00+00:00</updated><id>https://ddiwu.github.io/blog/2024/code-rsppi</id><content type="html" xml:base="https://ddiwu.github.io/blog/2024/code-rsppi/"><![CDATA[<h1 id="code">Code</h1> <p>First, you should write some code including .py, .json and .sh. You should put two py and json files in the same dir.</p> <h2 id="easyjsonpy">easyjson.py</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
#-*-coding: utf-8-*-
</span><span class="kn">import</span> <span class="n">json</span>
<span class="kn">import</span> <span class="n">time</span>

<span class="k">class</span> <span class="nc">easyJson</span><span class="p">():</span>
    <span class="sh">"""</span><span class="s">Class that loads hyperparameters from a json file.
        Example:
        ```
        params = easyjson(json_path)
        print(params.learning_rate)
        params.learning_rate = 0.5  # change the value of learning_rate in params
        ```
        </span><span class="sh">"""</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">json_path</span><span class="p">):</span>
        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">json_path</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">params</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> 
            <span class="n">self</span><span class="p">.</span><span class="n">__dict__</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">json_path</span><span class="p">):</span>
        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">json_path</span><span class="p">,</span> <span class="sh">'</span><span class="s">w</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">json</span><span class="p">.</span><span class="nf">dump</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">__dict__</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">json_path</span><span class="p">):</span>
        <span class="sh">"""</span><span class="s">Loads parameters from json file</span><span class="sh">"""</span>
        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">json_path</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">params</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
            <span class="n">self</span><span class="p">.</span><span class="n">__dict__</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>

    <span class="nd">@property</span> 
    <span class="k">def</span> <span class="nf">dict</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="sh">"""</span><span class="s">Gives dict-like access to Params instance by `params.dict[</span><span class="sh">'</span><span class="s">learning_rate</span><span class="sh">'</span><span class="s">]</span><span class="sh">"""</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">__dict__</span>
<span class="k">class</span> <span class="nc">DictObj</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="nb">map</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="nb">map</span> <span class="o">=</span> <span class="nb">map</span>

    <span class="k">def</span> <span class="nf">__setattr__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">name</span> <span class="o">==</span> <span class="sh">'</span><span class="s">map</span><span class="sh">'</span><span class="p">:</span>
             <span class="nb">object</span><span class="p">.</span><span class="nf">__setattr__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
             <span class="k">return</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">set attr called </span><span class="sh">'</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="n">value</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>

    <span class="k">def</span> <span class="nf">__getattr__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">name</span><span class="p">):</span>
        <span class="n">v</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
        <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">v</span><span class="p">,(</span><span class="nb">dict</span><span class="p">)):</span>
            <span class="k">return</span> <span class="nc">DictObj</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
        <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="p">(</span><span class="nb">list</span><span class="p">)):</span>
            <span class="n">r</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">v</span><span class="p">:</span>
                <span class="n">r</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nc">DictObj</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
            <span class="k">return</span> <span class="n">r</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">];</span>

    <span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">name</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">'</span><span class="s">__main__</span><span class="sh">'</span><span class="p">:</span>
    <span class="n">parameters</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">SEED</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">dataset</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Omniglot</span><span class="sh">"</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">meta_lr</span><span class="sh">"</span><span class="p">:</span> <span class="mf">1e-3</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_episodes</span><span class="sh">"</span><span class="p">:</span> <span class="mi">5000</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_classes</span><span class="sh">"</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_samples</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_query</span><span class="sh">"</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_steps</span><span class="sh">"</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_inner_tasks</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_train_updates</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_eval_updates</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">save_summary_steps</span><span class="sh">"</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_workers</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span>
                  <span class="p">}</span>
    <span class="n">json_str</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">dumps</span><span class="p">(</span><span class="n">parameters</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>

    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="sh">'</span><span class="s">params.json</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">w</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>  
        <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">json_str</span><span class="p">)</span>

    <span class="n">params</span> <span class="o">=</span> <span class="nf">easyJson</span><span class="p">(</span><span class="sh">'</span><span class="s">params.json</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">params</span><span class="p">.</span><span class="n">SEED</span> <span class="o">=</span> <span class="mi">2</span>   
    <span class="n">params</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="sh">'</span><span class="s">params.json</span><span class="sh">'</span><span class="p">)</span>  
</code></pre></div></div> <h2 id="getwlanippy">getwlanip.py</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#! /usr/bin/env python3
# -*- coding: utf-8 -*-
</span><span class="kn">import</span> <span class="n">socket</span>
<span class="kn">import</span> <span class="n">time</span>
<span class="kn">import</span> <span class="n">datetime</span>
<span class="kn">import</span> <span class="n">smtplib</span>
<span class="kn">import</span> <span class="n">urllib.request</span>
<span class="kn">import</span> <span class="n">importlib</span>
<span class="kn">from</span> <span class="n">easyjson</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="n">email.mime.multipart</span> <span class="kn">import</span> <span class="n">MIMEMultipart</span>
<span class="kn">from</span> <span class="n">email.mime.text</span> <span class="kn">import</span> <span class="n">MIMEText</span>
<span class="kn">from</span> <span class="n">email.mime.image</span> <span class="kn">import</span> <span class="n">MIMEImage</span>
<span class="kn">from</span> <span class="n">email.utils</span> <span class="kn">import</span> <span class="n">formataddr</span>
<span class="kn">import</span> <span class="n">sys</span>
<span class="c1">#import requests
#reload(sys)
</span><span class="n">importlib</span><span class="p">.</span><span class="nf">reload</span><span class="p">(</span><span class="n">sys</span><span class="p">)</span>
<span class="c1">#sys.setdefaultencoding('utf-8')
</span><span class="k">def</span> <span class="nf">check_network</span><span class="p">():</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<span class="c1">#        result=urllib.request.urlopen('http://baidu.com').read()
#        print(result)
</span>        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span><span class="o">=</span><span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="nf">urlopen</span><span class="p">(</span><span class="sh">'</span><span class="s">https://www.baidu.com</span><span class="sh">'</span><span class="p">).</span><span class="nf">read</span><span class="p">()</span>
<span class="c1">#            print(result)
</span>            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Network is Ready!</span><span class="sh">"</span><span class="p">)</span>
            <span class="k">break</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Network is not ready,Sleep 5s...</span><span class="sh">"</span><span class="p">)</span>
            <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
    <span class="k">return</span> <span class="bp">True</span>
<span class="k">def</span> <span class="nf">get_ip_address</span><span class="p">():</span>
    <span class="n">s</span> <span class="o">=</span><span class="n">socket</span><span class="p">.</span><span class="nf">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span><span class="n">socket</span><span class="p">.</span><span class="n">SOCK_DGRAM</span><span class="p">)</span>
    <span class="n">s</span><span class="p">.</span><span class="nf">connect</span><span class="p">((</span><span class="sh">"</span><span class="s">1.1.1.1</span><span class="sh">"</span><span class="p">,</span><span class="mi">80</span><span class="p">))</span>
    <span class="n">ipaddr</span><span class="o">=</span><span class="n">s</span><span class="p">.</span><span class="nf">getsockname</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">s</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">ipaddr</span>

<span class="k">def</span> <span class="nf">sendEmail</span><span class="p">():</span>
    <span class="n">ret</span><span class="o">=</span><span class="bp">True</span>
    <span class="n">ipaddr</span><span class="o">=</span><span class="nf">str</span><span class="p">(</span><span class="nf">get_ip_address</span><span class="p">());</span>
    <span class="n">configJsons</span><span class="o">=</span><span class="nf">easyJson</span><span class="p">(</span><span class="n">configpath</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">ipaddr</span><span class="o">==</span><span class="n">configJsons</span><span class="p">.</span><span class="n">oldip</span><span class="p">:</span>
        <span class="n">msgbody</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="sh">'</span><span class="se">\n\n</span><span class="sh">'</span><span class="p">,</span> <span class="n">piname</span><span class="p">,</span> <span class="sh">'</span><span class="s">ip is the same,with </span><span class="sh">'</span><span class="p">,</span> <span class="n">ipaddr</span> <span class="p">,</span> <span class="sh">'</span><span class="s"> ,history: </span><span class="sh">'</span> <span class="p">,</span> <span class="n">configJsons</span><span class="p">.</span><span class="n">date</span> <span class="p">,</span><span class="sh">'</span><span class="se">\n</span><span class="s">adding new wifi info. you should</span><span class="se">\"</span><span class="s">cd /etc/wpa_supplicant # vi wpa_supplicant.conf</span><span class="se">\"</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">subjectPrefix</span><span class="o">=</span><span class="n">piname</span> <span class="o">+</span><span class="sh">'</span><span class="s"> WLAN IP no change</span><span class="sh">'</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">msgbody</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="sh">'</span><span class="s"> </span><span class="se">\n\n</span><span class="sh">'</span><span class="p">,</span> <span class="n">piname</span> <span class="p">,</span><span class="sh">'</span><span class="s">new ip is </span><span class="sh">'</span><span class="p">,</span> <span class="n">ipaddr</span> <span class="p">,</span><span class="sh">'</span><span class="s"> .</span><span class="se">\n</span><span class="s"> old ip is</span><span class="sh">'</span> <span class="p">,</span> <span class="n">configJsons</span><span class="p">.</span><span class="n">oldip</span> <span class="p">,</span> <span class="sh">'</span><span class="s">,history:</span><span class="sh">'</span> <span class="p">,</span> <span class="n">configJsons</span><span class="p">.</span><span class="n">date</span> <span class="p">,</span> <span class="sh">'</span><span class="se">\n\n</span><span class="s">apaty from SSH ip, you should change DNS</span><span class="se">\'</span><span class="s">vi /etc/dnsmasq.conf</span><span class="se">\'</span><span class="s"> listen-address=</span><span class="se">\n</span><span class="s">adding new wifi info. you should</span><span class="se">\"</span><span class="s">cd /etc/wpa_supplicant# vi wpa_supplicant.conf</span><span class="se">\"</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">subjectPrefix</span><span class="o">=</span><span class="sh">'</span><span class="s">!!!</span><span class="sh">'</span><span class="o">+</span> <span class="n">piname</span> <span class="o">+</span><span class="sh">'</span><span class="s"> WLAN IP change</span><span class="sh">'</span>
    <span class="n">cur</span><span class="o">=</span><span class="n">datetime</span><span class="p">.</span><span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">()</span>
    <span class="n">configJsons</span><span class="p">.</span><span class="n">date</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="n">cur</span><span class="p">.</span><span class="n">year</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">month</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">day</span> <span class="p">,</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">hour</span> <span class="p">,</span> <span class="sh">'</span><span class="s">:</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">minute</span>    <span class="p">)</span>
    <span class="n">configJsons</span><span class="p">.</span><span class="n">oldip</span><span class="o">=</span><span class="n">ipaddr</span>
    <span class="n">configJsons</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="n">configpath</span><span class="p">)</span>
<span class="c1">#    configJsons.save("/home/ubuntu/pythonScripts/wlanIPconfig.json")
</span>    <span class="k">try</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">sending</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">msg</span><span class="o">=</span><span class="nc">MIMEText</span><span class="p">(</span><span class="n">msgbody</span><span class="p">,</span><span class="sh">'</span><span class="s">plain</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">msg</span><span class="p">[</span><span class="sh">'</span><span class="s">From</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="nf">formataddr</span><span class="p">([</span><span class="sh">"</span><span class="s">usr</span><span class="sh">"</span><span class="p">,</span><span class="n">sender_name</span><span class="p">])</span>
        <span class="n">msg</span><span class="p">[</span><span class="sh">'</span><span class="s">To</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="nf">formataddr</span><span class="p">([</span><span class="sh">"</span><span class="s">reciever</span><span class="sh">"</span><span class="p">,</span><span class="n">receiver</span><span class="p">])</span>
        <span class="n">cur</span><span class="o">=</span><span class="n">datetime</span><span class="p">.</span><span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">()</span>
        <span class="n">msg</span><span class="p">[</span><span class="sh">'</span><span class="s">Subject</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span> <span class="n">subjectPrefix</span> <span class="p">,</span> <span class="sh">'</span><span class="s">-</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">year</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">month</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">day</span> <span class="p">,</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">hour</span> <span class="p">,</span> <span class="sh">'</span><span class="s">:</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">minute</span><span class="p">)</span>
        <span class="n">server</span><span class="o">=</span><span class="n">smtplib</span><span class="p">.</span><span class="nc">SMTP_SSL</span><span class="p">(</span><span class="n">sender_server</span><span class="p">,</span><span class="n">sender_port</span><span class="p">)</span>
        <span class="n">server</span><span class="p">.</span><span class="nf">login</span><span class="p">(</span><span class="n">sender_name</span><span class="p">,</span><span class="n">sender_passwd</span><span class="p">)</span>
        <span class="n">server</span><span class="p">.</span><span class="nf">sendmail</span><span class="p">(</span><span class="n">sender_name</span><span class="p">,[</span><span class="n">receiver</span><span class="p">,],</span><span class="n">msg</span><span class="p">.</span><span class="nf">as_string</span><span class="p">())</span>
        <span class="n">server</span><span class="p">.</span><span class="nf">quit</span><span class="p">()</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">finish</span><span class="sh">'</span><span class="p">)</span>
<span class="c1">######optional tg
#        print('send tg')
#        pushform={'text':msgbody}
#        params = json.dumps(pushform)
#        params = bytes(params, 'utf8')
#        headers={'Accept-Charset': 'utf-8', 'Content-Type': 'application/json','User-Agent':'Mozilla/5.0 3578.98 Safari/537.36'}
#        resp=urllib.request.Request(url=tgpushurl,data=params,headers=headers,method='POST')
#        response = urllib.request.urlopen(resp).read()
#        ret=True
#        print('finish')
######
</span>    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
        <span class="n">ret</span><span class="o">=</span><span class="bp">False</span>

<span class="k">if</span>  <span class="n">__name__</span> <span class="o">==</span> <span class="sh">'</span><span class="s">__main__</span><span class="sh">'</span> <span class="p">:</span>
    <span class="n">piname</span><span class="o">=</span><span class="sh">"</span><span class="s">wd-pi</span><span class="sh">"</span>
    <span class="n">configpath</span><span class="o">=</span><span class="sh">"</span><span class="s">/usr/local/report_py/wlanIPconfig.json</span><span class="sh">"</span>
    <span class="n">sender_name</span><span class="o">=</span><span class="sh">'</span><span class="s">3271391891@qq.com</span><span class="sh">'</span>
    <span class="n">sender_passwd</span><span class="o">=</span><span class="sh">"</span><span class="s">################</span><span class="sh">"</span> <span class="c1"># SMTP pass number
</span>    <span class="n">sender_server</span><span class="o">=</span><span class="sh">"</span><span class="s">smtp.qq.com</span><span class="sh">"</span>
    <span class="n">sender_port</span><span class="o">=</span><span class="mi">465</span>
    <span class="n">receiver</span><span class="o">=</span><span class="sh">'</span><span class="s">wd3271391891@mail.ustc.edu.cn</span><span class="sh">'</span>
<span class="c1">#    tgpushurl='optional'
</span>    <span class="nf">check_network</span><span class="p">()</span>
    <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
    <span class="nf">sendEmail</span><span class="p">()</span>
</code></pre></div></div> <h2 id="wlanipconfigjson">wlanIPconfig.json</h2> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2024/3/5 13:20"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"oldip"</span><span class="p">:</span><span class="w"> </span><span class="s2">"100.65.9.3"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>This is a file about the last update data.</p> <h2 id="getwlanipsh">getwlanip.sh</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/sh -e</span>
<span class="nb">cd</span> /usr/local/report_py/
<span class="nb">sudo </span>python3 getwlanip.py
</code></pre></div></div> <h1 id="privilige">Privilige</h1> <p>You’d better write a <strong>rc-local.service</strong> in /etcsystemd/system/</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[Unit]
Description=/etc/rc.local Compatibility
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
</code></pre></div></div> <p>And write them in terminal.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo chmod 777 .py
sudo chmod 777 getwlanip.sh
sudo chmod +x /etc/rc.local
sudo systemctl start rc-local.service
sudo systemctl enable rc-local.service
</code></pre></div></div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[automatically report the ip in ubuntu rsp-pi]]></summary></entry><entry><title type="html">Automatically report ip</title><link href="https://ddiwu.github.io/blog/2024/code/" rel="alternate" type="text/html" title="Automatically report ip"/><published>2024-03-05T00:00:00+00:00</published><updated>2024-03-05T00:00:00+00:00</updated><id>https://ddiwu.github.io/blog/2024/code</id><content type="html" xml:base="https://ddiwu.github.io/blog/2024/code/"><![CDATA[<h1 id="code">Code</h1> <p>First, you should write some code including .py, .json and .sh. You should put two py and json files in the same dir.</p> <h2 id="easyjsonpy">easyjson.py</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
#-*-coding: utf-8-*-
</span><span class="kn">import</span> <span class="n">json</span>
<span class="kn">import</span> <span class="n">time</span>

<span class="k">class</span> <span class="nc">easyJson</span><span class="p">():</span>
    <span class="sh">"""</span><span class="s">Class that loads hyperparameters from a json file.
        Example:
        ```
        params = easyjson(json_path)
        print(params.learning_rate)
        params.learning_rate = 0.5  # change the value of learning_rate in params
        ```
        </span><span class="sh">"""</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">json_path</span><span class="p">):</span>
        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">json_path</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">params</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span> 
            <span class="n">self</span><span class="p">.</span><span class="n">__dict__</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">json_path</span><span class="p">):</span>
        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">json_path</span><span class="p">,</span> <span class="sh">'</span><span class="s">w</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">json</span><span class="p">.</span><span class="nf">dump</span><span class="p">(</span><span class="n">self</span><span class="p">.</span><span class="n">__dict__</span><span class="p">,</span> <span class="n">f</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">json_path</span><span class="p">):</span>
        <span class="sh">"""</span><span class="s">Loads parameters from json file</span><span class="sh">"""</span>
        <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="n">json_path</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">params</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
            <span class="n">self</span><span class="p">.</span><span class="n">__dict__</span><span class="p">.</span><span class="nf">update</span><span class="p">(</span><span class="n">params</span><span class="p">)</span>

    <span class="nd">@property</span> 
    <span class="k">def</span> <span class="nf">dict</span><span class="p">(</span><span class="n">self</span><span class="p">):</span>
        <span class="sh">"""</span><span class="s">Gives dict-like access to Params instance by `params.dict[</span><span class="sh">'</span><span class="s">learning_rate</span><span class="sh">'</span><span class="s">]</span><span class="sh">"""</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="n">__dict__</span>
<span class="k">class</span> <span class="nc">DictObj</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="nb">map</span><span class="p">):</span>
        <span class="n">self</span><span class="p">.</span><span class="nb">map</span> <span class="o">=</span> <span class="nb">map</span>

    <span class="k">def</span> <span class="nf">__setattr__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">name</span> <span class="o">==</span> <span class="sh">'</span><span class="s">map</span><span class="sh">'</span><span class="p">:</span>
             <span class="nb">object</span><span class="p">.</span><span class="nf">__setattr__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
             <span class="k">return</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">set attr called </span><span class="sh">'</span> <span class="o">+</span> <span class="n">name</span> <span class="o">+</span> <span class="n">value</span><span class="p">)</span>
        <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">]</span> <span class="o">=</span> <span class="n">value</span>

    <span class="k">def</span> <span class="nf">__getattr__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">name</span><span class="p">):</span>
        <span class="n">v</span> <span class="o">=</span> <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>
        <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">v</span><span class="p">,(</span><span class="nb">dict</span><span class="p">)):</span>
            <span class="k">return</span> <span class="nc">DictObj</span><span class="p">(</span><span class="n">v</span><span class="p">)</span>
        <span class="k">if</span> <span class="nf">isinstance</span><span class="p">(</span><span class="n">v</span><span class="p">,</span> <span class="p">(</span><span class="nb">list</span><span class="p">)):</span>
            <span class="n">r</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">v</span><span class="p">:</span>
                <span class="n">r</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="nc">DictObj</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
            <span class="k">return</span> <span class="n">r</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">];</span>

    <span class="k">def</span> <span class="nf">__getitem__</span><span class="p">(</span><span class="n">self</span><span class="p">,</span><span class="n">name</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">self</span><span class="p">.</span><span class="nb">map</span><span class="p">[</span><span class="n">name</span><span class="p">]</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="sh">'</span><span class="s">__main__</span><span class="sh">'</span><span class="p">:</span>
    <span class="n">parameters</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">SEED</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">dataset</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Omniglot</span><span class="sh">"</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">meta_lr</span><span class="sh">"</span><span class="p">:</span> <span class="mf">1e-3</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_episodes</span><span class="sh">"</span><span class="p">:</span> <span class="mi">5000</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_classes</span><span class="sh">"</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_samples</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_query</span><span class="sh">"</span><span class="p">:</span> <span class="mi">10</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_steps</span><span class="sh">"</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_inner_tasks</span><span class="sh">"</span><span class="p">:</span> <span class="mi">8</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_train_updates</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_eval_updates</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">save_summary_steps</span><span class="sh">"</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
                  <span class="sh">"</span><span class="s">num_workers</span><span class="sh">"</span><span class="p">:</span> <span class="mi">1</span>
                  <span class="p">}</span>
    <span class="n">json_str</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="nf">dumps</span><span class="p">(</span><span class="n">parameters</span><span class="p">,</span> <span class="n">indent</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>

    <span class="k">with</span> <span class="nf">open</span><span class="p">(</span><span class="sh">'</span><span class="s">params.json</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">w</span><span class="sh">'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>  
        <span class="n">f</span><span class="p">.</span><span class="nf">write</span><span class="p">(</span><span class="n">json_str</span><span class="p">)</span>

    <span class="n">params</span> <span class="o">=</span> <span class="nf">easyJson</span><span class="p">(</span><span class="sh">'</span><span class="s">params.json</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">params</span><span class="p">.</span><span class="n">SEED</span> <span class="o">=</span> <span class="mi">2</span>   
    <span class="n">params</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="sh">'</span><span class="s">params.json</span><span class="sh">'</span><span class="p">)</span>  
</code></pre></div></div> <h2 id="getwlanippy">getwlanip.py</h2> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#! /usr/bin/env python3
# -*- coding: utf-8 -*-
</span><span class="kn">import</span> <span class="n">socket</span>
<span class="kn">import</span> <span class="n">time</span>
<span class="kn">import</span> <span class="n">datetime</span>
<span class="kn">import</span> <span class="n">smtplib</span>
<span class="kn">import</span> <span class="n">urllib.request</span>
<span class="kn">import</span> <span class="n">importlib</span>
<span class="kn">from</span> <span class="n">easyjson</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="n">email.mime.multipart</span> <span class="kn">import</span> <span class="n">MIMEMultipart</span>
<span class="kn">from</span> <span class="n">email.mime.text</span> <span class="kn">import</span> <span class="n">MIMEText</span>
<span class="kn">from</span> <span class="n">email.mime.image</span> <span class="kn">import</span> <span class="n">MIMEImage</span>
<span class="kn">from</span> <span class="n">email.utils</span> <span class="kn">import</span> <span class="n">formataddr</span>
<span class="kn">import</span> <span class="n">sys</span>
<span class="c1">#import requests
#reload(sys)
</span><span class="n">importlib</span><span class="p">.</span><span class="nf">reload</span><span class="p">(</span><span class="n">sys</span><span class="p">)</span>
<span class="c1">#sys.setdefaultencoding('utf-8')
</span><span class="k">def</span> <span class="nf">check_network</span><span class="p">():</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<span class="c1">#        result=urllib.request.urlopen('http://baidu.com').read()
#        print(result)
</span>        <span class="k">try</span><span class="p">:</span>
            <span class="n">result</span><span class="o">=</span><span class="n">urllib</span><span class="p">.</span><span class="n">request</span><span class="p">.</span><span class="nf">urlopen</span><span class="p">(</span><span class="sh">'</span><span class="s">https://www.baidu.com</span><span class="sh">'</span><span class="p">).</span><span class="nf">read</span><span class="p">()</span>
<span class="c1">#            print(result)
</span>            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Network is Ready!</span><span class="sh">"</span><span class="p">)</span>
            <span class="k">break</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="nf">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
            <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Network is not ready,Sleep 5s...</span><span class="sh">"</span><span class="p">)</span>
            <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
    <span class="k">return</span> <span class="bp">True</span>
<span class="k">def</span> <span class="nf">get_ip_address</span><span class="p">():</span>
    <span class="n">s</span> <span class="o">=</span><span class="n">socket</span><span class="p">.</span><span class="nf">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span><span class="n">socket</span><span class="p">.</span><span class="n">SOCK_DGRAM</span><span class="p">)</span>
    <span class="n">s</span><span class="p">.</span><span class="nf">connect</span><span class="p">((</span><span class="sh">"</span><span class="s">1.1.1.1</span><span class="sh">"</span><span class="p">,</span><span class="mi">80</span><span class="p">))</span>
    <span class="n">ipaddr</span><span class="o">=</span><span class="n">s</span><span class="p">.</span><span class="nf">getsockname</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">s</span><span class="p">.</span><span class="nf">close</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">ipaddr</span>

<span class="k">def</span> <span class="nf">sendEmail</span><span class="p">():</span>
    <span class="n">ret</span><span class="o">=</span><span class="bp">True</span>
    <span class="n">ipaddr</span><span class="o">=</span><span class="nf">str</span><span class="p">(</span><span class="nf">get_ip_address</span><span class="p">());</span>
    <span class="n">configJsons</span><span class="o">=</span><span class="nf">easyJson</span><span class="p">(</span><span class="n">configpath</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">ipaddr</span><span class="o">==</span><span class="n">configJsons</span><span class="p">.</span><span class="n">oldip</span><span class="p">:</span>
        <span class="n">msgbody</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="sh">'</span><span class="se">\n\n</span><span class="sh">'</span><span class="p">,</span> <span class="n">piname</span><span class="p">,</span> <span class="sh">'</span><span class="s">ip is the same,with </span><span class="sh">'</span><span class="p">,</span> <span class="n">ipaddr</span> <span class="p">,</span> <span class="sh">'</span><span class="s"> ,history: </span><span class="sh">'</span> <span class="p">,</span> <span class="n">configJsons</span><span class="p">.</span><span class="n">date</span> <span class="p">,</span><span class="sh">'</span><span class="se">\n</span><span class="s">adding new wifi info. you should</span><span class="se">\"</span><span class="s">cd /etc/wpa_supplicant # vi wpa_supplicant.conf</span><span class="se">\"</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">subjectPrefix</span><span class="o">=</span><span class="n">piname</span> <span class="o">+</span><span class="sh">'</span><span class="s"> WLAN IP no change</span><span class="sh">'</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">msgbody</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="sh">'</span><span class="s"> </span><span class="se">\n\n</span><span class="sh">'</span><span class="p">,</span> <span class="n">piname</span> <span class="p">,</span><span class="sh">'</span><span class="s">new ip is </span><span class="sh">'</span><span class="p">,</span> <span class="n">ipaddr</span> <span class="p">,</span><span class="sh">'</span><span class="s"> .</span><span class="se">\n</span><span class="s"> old ip is</span><span class="sh">'</span> <span class="p">,</span> <span class="n">configJsons</span><span class="p">.</span><span class="n">oldip</span> <span class="p">,</span> <span class="sh">'</span><span class="s">,history:</span><span class="sh">'</span> <span class="p">,</span> <span class="n">configJsons</span><span class="p">.</span><span class="n">date</span> <span class="p">,</span> <span class="sh">'</span><span class="se">\n\n</span><span class="s">apaty from SSH ip, you should change DNS</span><span class="se">\'</span><span class="s">vi /etc/dnsmasq.conf</span><span class="se">\'</span><span class="s"> listen-address=</span><span class="se">\n</span><span class="s">adding new wifi info. you should</span><span class="se">\"</span><span class="s">cd /etc/wpa_supplicant# vi wpa_supplicant.conf</span><span class="se">\"</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">subjectPrefix</span><span class="o">=</span><span class="sh">'</span><span class="s">!!!</span><span class="sh">'</span><span class="o">+</span> <span class="n">piname</span> <span class="o">+</span><span class="sh">'</span><span class="s"> WLAN IP change</span><span class="sh">'</span>
    <span class="n">cur</span><span class="o">=</span><span class="n">datetime</span><span class="p">.</span><span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">()</span>
    <span class="n">configJsons</span><span class="p">.</span><span class="n">date</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span><span class="n">cur</span><span class="p">.</span><span class="n">year</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">month</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">day</span> <span class="p">,</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">hour</span> <span class="p">,</span> <span class="sh">'</span><span class="s">:</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">minute</span>    <span class="p">)</span>
    <span class="n">configJsons</span><span class="p">.</span><span class="n">oldip</span><span class="o">=</span><span class="n">ipaddr</span>
    <span class="n">configJsons</span><span class="p">.</span><span class="nf">save</span><span class="p">(</span><span class="n">configpath</span><span class="p">)</span>
<span class="c1">#    configJsons.save("/home/ubuntu/pythonScripts/wlanIPconfig.json")
</span>    <span class="k">try</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">sending</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">msg</span><span class="o">=</span><span class="nc">MIMEText</span><span class="p">(</span><span class="n">msgbody</span><span class="p">,</span><span class="sh">'</span><span class="s">plain</span><span class="sh">'</span><span class="p">,</span><span class="sh">'</span><span class="s">utf-8</span><span class="sh">'</span><span class="p">)</span>
        <span class="n">msg</span><span class="p">[</span><span class="sh">'</span><span class="s">From</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="nf">formataddr</span><span class="p">([</span><span class="sh">"</span><span class="s">usr</span><span class="sh">"</span><span class="p">,</span><span class="n">sender_name</span><span class="p">])</span>
        <span class="n">msg</span><span class="p">[</span><span class="sh">'</span><span class="s">To</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="nf">formataddr</span><span class="p">([</span><span class="sh">"</span><span class="s">reciever</span><span class="sh">"</span><span class="p">,</span><span class="n">receiver</span><span class="p">])</span>
        <span class="n">cur</span><span class="o">=</span><span class="n">datetime</span><span class="p">.</span><span class="n">datetime</span><span class="p">.</span><span class="nf">now</span><span class="p">()</span>
        <span class="n">msg</span><span class="p">[</span><span class="sh">'</span><span class="s">Subject</span><span class="sh">'</span><span class="p">]</span><span class="o">=</span><span class="sh">'</span><span class="s">%s%s%s%s%s%s%s%s%s%s%s</span><span class="sh">'</span> <span class="o">%</span> <span class="p">(</span> <span class="n">subjectPrefix</span> <span class="p">,</span> <span class="sh">'</span><span class="s">-</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">year</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">month</span> <span class="p">,</span> <span class="sh">'</span><span class="s">/</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">day</span> <span class="p">,</span> <span class="sh">'</span><span class="s"> </span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">hour</span> <span class="p">,</span> <span class="sh">'</span><span class="s">:</span><span class="sh">'</span> <span class="p">,</span> <span class="n">cur</span><span class="p">.</span><span class="n">minute</span><span class="p">)</span>
        <span class="n">server</span><span class="o">=</span><span class="n">smtplib</span><span class="p">.</span><span class="nc">SMTP_SSL</span><span class="p">(</span><span class="n">sender_server</span><span class="p">,</span><span class="n">sender_port</span><span class="p">)</span>
        <span class="n">server</span><span class="p">.</span><span class="nf">login</span><span class="p">(</span><span class="n">sender_name</span><span class="p">,</span><span class="n">sender_passwd</span><span class="p">)</span>
        <span class="n">server</span><span class="p">.</span><span class="nf">sendmail</span><span class="p">(</span><span class="n">sender_name</span><span class="p">,[</span><span class="n">receiver</span><span class="p">,],</span><span class="n">msg</span><span class="p">.</span><span class="nf">as_string</span><span class="p">())</span>
        <span class="n">server</span><span class="p">.</span><span class="nf">quit</span><span class="p">()</span>
        <span class="nf">print</span><span class="p">(</span><span class="sh">'</span><span class="s">finish</span><span class="sh">'</span><span class="p">)</span>
<span class="c1">######optional tg
#        print('send tg')
#        pushform={'text':msgbody}
#        params = json.dumps(pushform)
#        params = bytes(params, 'utf8')
#        headers={'Accept-Charset': 'utf-8', 'Content-Type': 'application/json','User-Agent':'Mozilla/5.0 3578.98 Safari/537.36'}
#        resp=urllib.request.Request(url=tgpushurl,data=params,headers=headers,method='POST')
#        response = urllib.request.urlopen(resp).read()
#        ret=True
#        print('finish')
######
</span>    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
        <span class="n">ret</span><span class="o">=</span><span class="bp">False</span>

<span class="k">if</span>  <span class="n">__name__</span> <span class="o">==</span> <span class="sh">'</span><span class="s">__main__</span><span class="sh">'</span> <span class="p">:</span>
    <span class="n">piname</span><span class="o">=</span><span class="sh">"</span><span class="s">wd-pi</span><span class="sh">"</span>
    <span class="n">configpath</span><span class="o">=</span><span class="sh">"</span><span class="s">/usr/local/report_py/wlanIPconfig.json</span><span class="sh">"</span>
    <span class="n">sender_name</span><span class="o">=</span><span class="sh">'</span><span class="s">3271391891@qq.com</span><span class="sh">'</span>
    <span class="n">sender_passwd</span><span class="o">=</span><span class="sh">"</span><span class="s">gfzbqrrnozhmchee</span><span class="sh">"</span>
    <span class="n">sender_server</span><span class="o">=</span><span class="sh">"</span><span class="s">smtp.qq.com</span><span class="sh">"</span>
    <span class="n">sender_port</span><span class="o">=</span><span class="mi">465</span>
    <span class="n">receiver</span><span class="o">=</span><span class="sh">'</span><span class="s">wd3271391891@mail.ustc.edu.cn</span><span class="sh">'</span>
<span class="c1">#    tgpushurl='optional'
</span>    <span class="nf">check_network</span><span class="p">()</span>
    <span class="n">time</span><span class="p">.</span><span class="nf">sleep</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
    <span class="nf">sendEmail</span><span class="p">()</span>
</code></pre></div></div> <h2 id="wlanipconfigjson">wlanIPconfig.json</h2> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"date"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2024/3/5 13:20"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"oldip"</span><span class="p">:</span><span class="w"> </span><span class="s2">"100.65.9.3"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> <p>This is a file about the last update data.</p> <h2 id="getwlanipsh">getwlanip.sh</h2> <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#!/bin/sh -e</span>
<span class="nb">cd</span> /usr/local/report_py/
<span class="nb">sudo </span>python3 getwlanip.py
</code></pre></div></div> <h1 id="privilige">Privilige</h1> <p>You’d better write a <strong>rc-local.service</strong> in /etcsystemd/system/</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[Unit]
Description=/etc/rc.local Compatibility
ConditionPathExists=/etc/rc.local

[Service]
Type=forking
ExecStart=/etc/rc.local start
TimeoutSec=0
StandardOutput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target
</code></pre></div></div> <p>And write them in terminal.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>sudo chmod 777 .py
sudo chmod 777 getwlanip.sh
sudo chmod +x /etc/rc.local
sudo systemctl start rc-local.service
sudo systemctl enable rc-local.service
</code></pre></div></div>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[automatically report the ip in ubuntu rsp-pi]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://ddiwu.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://ddiwu.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://ddiwu.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://ddiwu.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://ddiwu.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://ddiwu.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9-480.webp 480w,/assets/img/9-800.webp 800w,/assets/img/9-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7-480.webp 480w,/assets/img/7-800.webp 800w,/assets/img/7-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8-480.webp 480w,/assets/img/8-800.webp 800w,/assets/img/8-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10-480.webp 480w,/assets/img/10-800.webp 800w,/assets/img/10-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12-480.webp 480w,/assets/img/12-800.webp 800w,/assets/img/12-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic-480.webp 480w,/assets/img/prof_pic-800.webp 800w,/assets/img/prof_pic-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color-480.webp 480w,/assets/img/prof_pic_color-800.webp 800w,/assets/img/prof_pic_color-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://ddiwu.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://ddiwu.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://ddiwu.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry><entry><title type="html">a post with echarts</title><link href="https://ddiwu.github.io/blog/2024/echarts/" rel="alternate" type="text/html" title="a post with echarts"/><published>2024-01-26T16:03:00+00:00</published><updated>2024-01-26T16:03:00+00:00</updated><id>https://ddiwu.github.io/blog/2024/echarts</id><content type="html" xml:base="https://ddiwu.github.io/blog/2024/echarts/"><![CDATA[<p>This is an example post with some <a href="https://echarts.apache.org/">echarts</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">echarts
</span><span class="sb">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-echarts">{
  "title": {
    "text": "ECharts Getting Started Example"
  },
  "responsive": true,
  "tooltip": {},
  "legend": {
    "top": "30px",
    "data": ["sales"]
  },
  "xAxis": {
    "data": ["Shirts", "Cardigans", "Chiffons", "Pants", "Heels", "Socks"]
  },
  "yAxis": {},
  "series": [
    {
      "name": "sales",
      "type": "bar",
      "data": [5, 20, 36, 10, 10, 20]
    }
  ]
}
</code></pre> <p>Note that this library offer support for both light and dark themes. You can switch between them using the theme switcher in the top right corner of the page.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included echarts code could look like]]></summary></entry><entry><title type="html">a post with chart.js</title><link href="https://ddiwu.github.io/blog/2024/chartjs/" rel="alternate" type="text/html" title="a post with chart.js"/><published>2024-01-26T01:04:00+00:00</published><updated>2024-01-26T01:04:00+00:00</updated><id>https://ddiwu.github.io/blog/2024/chartjs</id><content type="html" xml:base="https://ddiwu.github.io/blog/2024/chartjs/"><![CDATA[<p>This is an example post with some <a href="https://www.chartjs.org/">chart.js</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>This is how it looks like:</p> <pre><code class="language-chartjs">{
  "type": "line",
  "data": {
    "labels": [
      "January",
      "February",
      "March",
      "April",
      "May",
      "June",
      "July"
    ],
    "datasets": [
      {
        "label": "# of bugs",
        "fill": false,
        "lineTension": 0.1,
        "backgroundColor": "rgba(75,192,192,0.4)",
        "borderColor": "rgba(75,192,192,1)",
        "borderCapStyle": "butt",
        "borderDash": [],
        "borderDashOffset": 0,
        "borderJoinStyle": "miter",
        "pointBorderColor": "rgba(75,192,192,1)",
        "pointBackgroundColor": "#fff",
        "pointBorderWidth": 1,
        "pointHoverRadius": 5,
        "pointHoverBackgroundColor": "rgba(75,192,192,1)",
        "pointHoverBorderColor": "rgba(220,220,220,1)",
        "pointHoverBorderWidth": 2,
        "pointRadius": 1,
        "pointHitRadius": 10,
        "data": [
          65,
          59,
          80,
          81,
          56,
          55,
          40
        ],
        "spanGaps": false
      }
    ]
  },
  "options": {}
}
</code></pre> <p>Also another example chart.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">chartjs
</span><span class="sb">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-chartjs">{
  "type": "doughnut",
  "data": {
    "labels": [
      "Red",
      "Blue",
      "Yellow"
    ],
    "datasets": [
      {
        "data": [
          300,
          50,
          100
        ],
        "backgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ],
        "hoverBackgroundColor": [
          "#FF6384",
          "#36A2EB",
          "#FFCE56"
        ]
      }
    ]
  },
  "options": {}
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included chart.js code could look like]]></summary></entry><entry><title type="html">a post with TikZJax</title><link href="https://ddiwu.github.io/blog/2023/tikzjax/" rel="alternate" type="text/html" title="a post with TikZJax"/><published>2023-12-12T22:25:00+00:00</published><updated>2023-12-12T22:25:00+00:00</updated><id>https://ddiwu.github.io/blog/2023/tikzjax</id><content type="html" xml:base="https://ddiwu.github.io/blog/2023/tikzjax/"><![CDATA[<p>This is an example post with TikZ code. TikZJax converts script tags (containing TikZ code) into SVGs.</p> <script type="text/tikz">
\begin{tikzpicture}
    \draw[red,fill=black!60!red] (0,0) circle [radius=1.5];
    \draw[green,fill=black!60!green] (0,0) circle [x radius=1.5cm, y radius=10mm];
    \draw[blue,fill=black!60!blue] (0,0) circle [x radius=1cm, y radius=5mm, rotate=30];
\end{tikzpicture}
</script>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included TikZ code could look like]]></summary></entry><entry><title type="html">a post with bibliography</title><link href="https://ddiwu.github.io/blog/2023/post-bibliography/" rel="alternate" type="text/html" title="a post with bibliography"/><published>2023-07-12T13:56:00+00:00</published><updated>2023-07-12T13:56:00+00:00</updated><id>https://ddiwu.github.io/blog/2023/post-bibliography</id><content type="html" xml:base="https://ddiwu.github.io/blog/2023/post-bibliography/"><![CDATA[<p>This post shows how to add bibliography to simple blog posts. We support every citation style that <a href="https://github.com/inukshuk/jekyll-scholar">jekyll-scholar</a> does. That means simple citation like <a class="citation" href="#einstein1950meaning">(Einstein &amp; Taub, 1950)</a>, multiple citations like <a class="citation" href="#einstein1950meaning">(Einstein &amp; Taub, 1950; Einstein, 1905)</a>, long references like <span id="einstein1905movement">Einstein, A. (1905). Un the movement of small particles suspended in statiunary liquids required by the molecular-kinetic theory 0f heat. <i>Ann. Phys.</i>, <i>17</i>, 549–560.</span> or also quotes:</p> <blockquote><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit,<br/>sed do eiusmod tempor.</p><p>Lorem ipsum dolor sit amet, consectetur adipisicing.</p><cite><a class="citation" href="#einstein1905electrodynamics">(Einstein, 1905)</a></cite></blockquote> <p>If you would like something more academic, check the <a href="/blog/2021/distill/">distill style post</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="bib"/><summary type="html"><![CDATA[an example of a blog post with bibliography]]></summary></entry><entry><title type="html">a post with jupyter notebook</title><link href="https://ddiwu.github.io/blog/2023/jupyter-notebook/" rel="alternate" type="text/html" title="a post with jupyter notebook"/><published>2023-07-04T12:57:00+00:00</published><updated>2023-07-04T12:57:00+00:00</updated><id>https://ddiwu.github.io/blog/2023/jupyter-notebook</id><content type="html" xml:base="https://ddiwu.github.io/blog/2023/jupyter-notebook/"><![CDATA[<p>To include a jupyter notebook in a post, you can use the following code:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{::nomarkdown}
<span class="cp">{%</span><span class="w"> </span><span class="nt">assign</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s1">'assets/jupyter/blog.ipynb'</span><span class="w"> </span><span class="p">|</span><span class="w"> </span><span class="nf">relative_url</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">capture</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">file_exists</span><span class="w"> </span>assets/jupyter/blog.ipynb<span class="w"> </span><span class="cp">%}{%</span><span class="w"> </span><span class="nt">endcapture</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">if</span><span class="w"> </span><span class="nv">notebook_exists</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'true'</span><span class="w"> </span><span class="cp">%}</span>
  <span class="cp">{%</span><span class="w"> </span><span class="nt">jupyter_notebook</span><span class="w"> </span><span class="nv">jupyter_path</span><span class="w"> </span><span class="cp">%}</span>
<span class="cp">{%</span><span class="w"> </span><span class="nt">else</span><span class="w"> </span><span class="cp">%}</span>
  &lt;p&gt;Sorry, the notebook you are looking for does not exist.&lt;/p&gt;
<span class="cp">{%</span><span class="w"> </span><span class="nt">endif</span><span class="w"> </span><span class="cp">%}</span>
{:/nomarkdown}
</code></pre></div></div> <p>Let’s break it down: this is possible thanks to <a href="https://github.com/red-data-tools/jekyll-jupyter-notebook">Jekyll Jupyter Notebook plugin</a> that allows you to embed jupyter notebooks in your posts. It basically calls <a href="https://nbconvert.readthedocs.io/en/latest/usage.html#convert-html"><code class="language-plaintext highlighter-rouge">jupyter nbconvert --to html</code></a> to convert the notebook to an html page and then includes it in the post. Since <a href="https://jekyllrb.com/docs/configuration/markdown/">Kramdown</a> is the default Markdown renderer for Jekyll, we need to surround the call to the plugin with the <a href="https://kramdown.gettalong.org/syntax.html#extensions">::nomarkdown</a> tag so that it stops processing this part with Kramdown and outputs the content as-is.</p> <p>The plugin takes as input the path to the notebook, but it assumes the file exists. If you want to check if the file exists before calling the plugin, you can use the <code class="language-plaintext highlighter-rouge">file_exists</code> filter. This avoids getting a 404 error from the plugin and ending up displaying the main page inside of it instead. If the file does not exist, you can output a message to the user. The code displayed above outputs the following:</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/blog.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>Note that the jupyter notebook supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="jupyter"/><summary type="html"><![CDATA[an example of a blog post with jupyter notebook]]></summary></entry></feed>